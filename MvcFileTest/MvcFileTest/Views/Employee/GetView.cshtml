@{
    Layout = null;
}

@* 强类型View
@model MvcFileTest.Models.Employee *@


@using MvcFileTest.ViewModels
@model EmployeeViewModel

<!DOCTYPE html>



<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>GetView</title>
</head>
<body>
    <div>
        Welcome to MVC
    </div>
    <div>
        @*
        @{
            //强制转换ViewBag对象的类型
            MvcFileTest.Models.Employee e = (MvcFileTest.Models.Employee)
                //ViewData["Employee"];
                ViewBag.Employee;
                }
        

        <b>Details </b><br />
        
        Employee Name: @e.FirstName @e.LastName <br />
        Employee Salary: @e.Salary.ToString("C");
        

        Employee Name: @Model.FirstName @Model.LastName<br />

        //View中不应包含逻辑层
        @if (Model.Salary > 15000)
        {
            <span style="background-color:yellow">
                Employee Salary: @Model.Salary.ToString("C")
            </span>
        }     
        else
        {
            <span style="background-color:green">
                Employee Salary: @Model.Salary.ToString("C")
            </span>
        }
        <br />
        *@

    </div>

    <div>
        @* Hello @Model.UserName *@
        <hr />
        <div>
            <b>Employee Details</b><br />
            Employee Name : @Model.EmployeeName <br />
            <span style="background-color:@Model.SalaryColor">
                Employee Salary: @Model.Salary
            </span>
        </div>
    </div>

</body>
</html>
